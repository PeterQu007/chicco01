/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app/background/eventPage.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/assets/scripts/modules/Database.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n//Create, Read, Write, Query Database\n//http://localhost:5984/_utils/#/_all_dbs\nvar Database =\n/*#__PURE__*/\nfunction () {\n  function Database() {\n    _classCallCheck(this, Database);\n\n    //console.group('database constructor');\n    this.dbAssess = new PouchDB(\"http://localhost:5984/bcassessment\");\n    this.dbComplex = new PouchDB(\"http://localhost:5984/complex\");\n    this.dbExposure = new PouchDB(\"http://localhost:5984/exposure\");\n    this.dbListing = new PouchDB(\"http://localhost:5984/listing\"); //http://localhost:5984/_utils/#/database/exposure/_all_docs\n\n    this.dbStrataPlanSummary = new PouchDB(\"http://localhost:5984/strataplansummary\");\n    this.dbShowing = new PouchDB(\"http://localhost:5984/showing\");\n    this.dbAssess.info().then(function (info) {//console.log(info);\n    });\n    this.dbComplex.info().then(function (info) {//console.log(info);\n    });\n    this.dbExposure.info().then(function (info) {// console.log(info);\n    });\n    this.dbListing.info().then(function (info) {\n      console.log(info);\n    });\n    this.dbStrataPlanSummary.info().then(function (info) {//console.log(info);\n    });\n    this.dbShowing.info().then(function (info) {//console.log(info);\n    });\n    this.assess = null;\n    this.complex = null;\n    this.exposure = null;\n    this.strataPlan = null;\n    this.showing = null; //console.groupEnd('database constructor');\n  }\n\n  _createClass(Database, [{\n    key: \"readAssess\",\n    value: function readAssess(taxID, callback) {\n      //console.group(\">>>readAssess\");\n      var self = this;\n      self.dbAssess.get(taxID).then(function (doc) {\n        var assess = self.assess = doc; //console.log(\">>>read the tax info in database is: \", assess);\n\n        assess.from = \"assess-\" + Math.random().toFixed(8);\n        assess.dataFromDB = true; // chrome.storage.local.set(\n        // \t// {\n        // \t// \tlandValue: doc.landValue,\n        // \t// \timprovementValue: doc.improvementValue,\n        // \t// \ttotalValue: doc.totalValue,\n        // \t// \t_id: doc._id,\n        // \t// \tfrom: 'assess' + Math.random().toFixed(8)\n        // \t// }\n        // \tassess\n        // );\n\n        callback(self.assess);\n      }).catch(function (err) {\n        //console.log(\">>>read database error: \", err);\n        self.assess = {};\n        self.assess.from = \"assess-\" + Math.random().toFixed(8);\n        self.assess.dataFromDB = true;\n        self.assess._id = null;\n        callback(self.assess);\n      }); //console.groupEnd(\">>>readAssess\");\n    }\n  }, {\n    key: \"readAssess_v6\",\n    value: function readAssess_v6(taxID, callback) {\n      //console.group(\">>>readAssess\");\n      var self = this;\n\n      try {\n        self.dbAssess.get(taxID, function (err, doc) {\n          if (err) {\n            self.assess = null;\n            callback(self.assess);\n          } else {\n            var assess = self.assess = doc;\n            assess.from = \"assess-\" + Math.random().toFixed(8);\n            assess.dataFromDB = true;\n            callback(self.assess);\n          }\n        });\n      } catch (err) {\n        console.warn(err);\n        self.assess = null;\n        callback(self.assess);\n      }\n    }\n  }, {\n    key: \"writeAssess\",\n    value: function writeAssess(assess) {\n      //console.group('writeAssess');\n      var taxID = assess._id;\n      var self = this;\n      assess.dataFromDB = true;\n      var d = new Date();\n      assess.addedDate = d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate();\n      self.dbAssess.put(assess).then(function () {\n        return self.dbAssess.get(taxID);\n      }).then(function (doc) {//console.log(\">>>bc assessment has been saved to db: \", doc);\n      }).catch(function (err) {\n        //console.log(\">>>save bc assessment error: \", err);\n        self.dbAssess.get(taxID).then(function (doc) {\n          return self.dbAssess.remove(doc);\n        }).catch(function (err) {//console.log(\">>>remove bc assess error: \", err);\n        });\n      }); //console.groupEnd('writeAssess');\n    }\n  }, {\n    key: \"readStrataPlanSummary\",\n    value: function readStrataPlanSummary(strataPlan, callback) {\n      //console.group('readStrataPlanSummary');\n      //console.log(\">>>this in Database is: \", this);\n      var self = this;\n      self.dbStrataPlanSummary.get(strataPlan).then(function (doc) {\n        self.strataPlan = doc; //console.log(\">>>read the strataPlanSummary in database is: \", self.strataPlan);\n\n        chrome.storage.local.set({\n          active: doc.active,\n          sold: doc.sold,\n          count: doc.count,\n          searchDate: doc.searchDate,\n          complex: doc.complex,\n          strataPlan: doc._id,\n          from: \"strataPlanSummary\" + Math.random().toFixed(8)\n        });\n        callback(self.strataPlan);\n      }).catch(function (err) {\n        //console.log(\">>>read database strataPlanSummary error: \", err);\n        self.strataPlan = null;\n        callback(self.strataPlan);\n      }); //console.groupEnd('readStrataPlanSummary');\n    }\n  }, {\n    key: \"writeStrataPlanSummary\",\n    value: function writeStrataPlanSummary(strataplan) {\n      //console.group('writeStrataPlanSummary');\n      var strataPlan = strataplan._id;\n      var self = this;\n      self.dbStrataPlanSummary.put(strataplan).then(function () {\n        return self.dbStrataPlanSummary.get(strataPlan);\n      }).then(function (doc) {//console.log(\">>>StrataPlan Summary has been saved to dbComplex: \", doc);\n      }).catch(function (err) {\n        //console.log(\">>>save StrataPlan Summary error: \", err);\n        self.dbStrataPlanSummary.get(strataPlan).then(function (doc) {\n          return self.dbStrataPlanSummary.remove(doc);\n        }).catch(function (err) {//console.log(\">>>remove StrataPlan Summary error: \", err);\n        });\n      }); //console.groupEnd('writeStrataPlanSummary');\n    }\n  }, {\n    key: \"readComplex\",\n    value: function readComplex(complexInfo, callback) {\n      //console.group(\">>>readComplex\");\n      var self = this;\n      self.complex = complexInfo;\n      self.dbComplex.get(complexInfo._id, function (err, doc) {\n        if (err) {\n          self.writeComplex(self.complex);\n          self.complex.from = \"complexInfo-saved to db-\" + Math.random().toFixed(8);\n          callback(self.complex);\n        } else {\n          self.complex = doc;\n          self.complex.from = \"complexInfo\" + Math.random().toFixed(8);\n          callback(self.complex);\n        }\n      }); // self.dbComplex.get(complexInfo._id).then(function (doc) {\n      // \tself.complex = doc;\n      // \t//console.log(\">>>read the Complex info in database is: \", self.complex);\n      // \t// chrome.storage.local.set({\n      // \t// \tcomplexID: doc._id,\n      // \t// \tcomplexName: doc.name+'*',\n      // \t// \tstrataPlan: doc.strataPlan,\n      // \t// \taddDate: doc.addDate,\n      // \t// \tsubArea: doc.subArea,\n      // \t// \tneighborhood: doc.neighborhood,\n      // \t// \tpostcode: doc.postcode,\n      // \t// \tstreetName: doc.streetName,\n      // \t// \tstreetNumber: doc.streetNumber,\n      // \t// \tdwellingType: doc.dwellingType,\n      // \t// \ttotalUnits: doc.totalUnits,\n      // \t// \tdevUnits: doc.devUnits,\n      // \t// \tfrom: 'complex' + Math.random().toFixed(8)\n      // \t// });\n      // \tself.complex.from = 'complex' + Math.random().toFixed(8);\n      // \tcallback(self.complex);\n      // }).catch(function (err) {\n      // \t//console.log(\">>>read database Complex error: \", err);\n      // \t//self.complex = null;\n      // \tself.writeComplex(self.complex);\n      // \tself.complex.from = 'complex-saved to db-' + Math.random().toFixed(8);;\n      // \tcallback(self.complex);\n      // })\n      // //console.groupEnd(\">>>readComplex\");\n    }\n  }, {\n    key: \"writeComplex\",\n    value: function writeComplex(complex) {\n      //console.group('>>>writeComplex');\n      var complexID = complex._id;\n      var self = this;\n      var complexName = complex.name;\n      self.dbComplex.get(complexID).then(function (doc) {\n        //console.log('writeComplex...the complex EXISTS, pass writing');\n        doc[\"name\"] = complexName;\n        doc[\"complexName\"] = complexName;\n        self.dbComplex.put(doc);\n        return [doc, \"complex updated!\"];\n      }).catch(function (err) {\n        self.dbComplex.put(complex).then(function () {\n          //console.log('SAVED the complex info to database:', complex.name);\n          return self.dbComplex.get(complexID);\n        }).then(function (doc) {//console.log(\">>>Complex Info has been saved to dbComplex: \", doc);\n        }).catch(function (err) {//console.log(\">>>save Complex info error: \", err);\n        });\n      }); //console.groupEnd('>>>writeComplex');\n    }\n  }, {\n    key: \"readExposure\",\n    value: function readExposure(exposureInfo, callback) {\n      //console.group(\">>>readComplex\");\n      var self = this;\n      self.exposure = exposureInfo;\n      self.dbExposure.get(exposureInfo._id, function (err, doc) {\n        if (err) {\n          self.writeExposure(self.exposure);\n          self.exposure.from = \"exposure-saved to db-\" + Math.random().toFixed(8);\n          callback(self.exposure);\n        } else {\n          self.exposure = doc;\n          self.exposure.from = \"exposure\" + Math.random().toFixed(8);\n          callback(self.exposure);\n        }\n      });\n    }\n  }, {\n    key: \"writeExposure\",\n    value: function writeExposure(exposure) {\n      //console.group('>>>writeComplex');\n      var exposureID = exposure._id;\n      var self = this;\n      var exposureName = exposure.name;\n      self.dbExposure.get(exposureID).then(function (doc) {\n        //console.log('writeComplex...the complex EXISTS, pass writing');\n        doc[\"name\"] = exposureName;\n        self.dbExposure.put(doc);\n        return [doc, \"exposure updated!\"];\n      }).catch(function (err) {\n        self.dbExposure.put(exposure).then(function () {\n          //console.log('SAVED the complex info to database:', complex.name);\n          return self.dbExposure.get(exposureID);\n        }).then(function (doc) {//console.log(\">>>Complex Info has been saved to dbComplex: \", doc);\n        }).catch(function (err) {//console.log(\">>>save Complex info error: \", err);\n        });\n      }); //console.groupEnd('>>>writeComplex');\n    }\n  }, {\n    key: \"readListing\",\n    value: function readListing(listingInfo, callback) {\n      //console.group(\">>>readComplex\");\n      var self = this;\n      self.listing = listingInfo;\n      self.dbListing.get(listingInfo._id, function (err, doc) {\n        if (err) {\n          self.writeListing(self.listing);\n          self.listing.from = \"listing-saved to db-\" + Math.random().toFixed(8);\n          callback(self.listing);\n        } else {\n          self.listing = doc;\n          self.listing.from = \"listing\" + Math.random().toFixed(8);\n          callback(self.listing);\n        }\n      });\n    }\n  }, {\n    key: \"writeListing\",\n    value: function writeListing(listing) {\n      //console.group('>>>writeListing');\n      var listingID = listing._id;\n      var self = this;\n      var listingName = listing.name;\n      self.dbListing.get(listingID).then(function (doc) {\n        //console.log('writeListing...the listing EXISTS, pass writing');\n        doc[\"name\"] = listingName;\n        self.dbListing.put(doc);\n        return [doc, \"listing updated!\"];\n      }).catch(function (err) {\n        self.dbListing.put(listing).then(function () {\n          //console.log('SAVED the listing info to database:', listing.name);\n          return self.dbListing.get(listingID);\n        }).then(function (doc) {//console.log(\">>>Listing Info has been saved to dbListing: \", doc);\n        }).catch(function (err) {//console.log(\">>>save Listing info error: \", err);\n        });\n      }); //console.groupEnd('>>>writeListing');\n    }\n  }, {\n    key: \"readShowing\",\n    value: function readShowing(showingInfo, callback) {\n      //console.group(\">>>readShowing\");\n      var self = this;\n      self.showing = showingInfo;\n      self.dbShowing.get(showingInfo._id, function (err, doc) {\n        if (err) {\n          //console.log(\">>>read database showing error: \", err);\n          self.writeShowing(self.showing);\n          self.showing.from = \"showing-saved to db-\" + Math.random().toFixed(8);\n          callback(self.showing);\n        } else {\n          self.showing = doc; //console.log(\">>>read the showing Info in database is: \", self.showing);\n\n          self.showing.from = \"showing-\" + Math.random().toFixed(8);\n          callback(self.showing);\n        }\n      }); //console.groupEnd(\">>>readShowing\");\n    }\n  }, {\n    key: \"writeShowing\",\n    value: function writeShowing(showing) {\n      var showingID = showing._id;\n      var self = this;\n      var showingName = showing.name;\n      var clientName = showing.clientName;\n      var showingNote = showing.showingNote;\n      var showingDate = showing.showingDate;\n      var showingTime = showing.showingTime; //console.group('>>>writeShowing');\n\n      self.dbShowing.get(showingID).then(function (doc) {\n        //console.log('writeShowing...the showing info EXISTS, pass writing!');\n        doc[\"name\"] = showingName;\n        doc[\"clientName\"] = clientName;\n        doc[\"showingNote\"] = showingNote;\n        doc[\"showingDate\"] = showingDate;\n        doc[\"showingTime\"] = showingTime;\n        self.dbShowing.put(doc);\n        return [doc, \"showing updated!\"];\n      }).catch(function (err) {\n        self.dbShowing.put(showing).then(function () {\n          //console.log('SAVED the showing info to database:', showing.clientName);\n          return self.dbShowing.get(showingID);\n        }).then(function (doc) {//console.log(\">>>Showing Info has been saved to dbShowing: \", doc);\n        }).catch(function (err) {//console.log(\">>>save showing info error: \", err);\n        });\n      }); //console.groupEnd('>>>writeShowing');\n    }\n  }]);\n\n  return Database;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Database);\n\n//# sourceURL=webpack:///./app/assets/scripts/modules/Database.js?");

/***/ }),

/***/ "./app/background/eventPage.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _assets_scripts_modules_Database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./app/assets/scripts/modules/Database.js\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/util/util.js\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);\n//background script, event mode\n//message passed between background - defaultpage - iframes\n\n\nvar db = new _assets_scripts_modules_Database__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\nvar $fx = L$();\nvar newTaxYear = true; //beginning of new year, MLS tax db has not been updated, still use last year's assess. set newTaxYear to false\n\nvar d = new Date();\nvar taxYear = d.getFullYear();\ntaxYear = newTaxYear ? taxYear : taxYear - 1;\nvar complexInfoSearchResult = null;\nvar chromeTabID;\nvar $today = d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate();\nconsole.clear();\nchrome.tabs.query({\n  title: \"Paragon 5\"\n}, function (tabs) {\n  chromeTabID = tabs[0].id;\n  console.warn(\"background events page chromeTabID is: \", chromeTabID);\n});\n\n(function () {\n  //console.log(\"Hello!-1\");\n  chrome.storage.local.set({\n    landValue: 0,\n    improvementValue: 0,\n    totalValue: 0,\n    curTabID: null,\n    taxYear: taxYear\n  });\n  chrome.browserAction.onClicked.addListener(function (activeTab) {\n    //open a link\n    var newURL = \"http://idp.gvfv.clareitysecurity.net/idp/Authn/UserPassword\"; //var newURL = \"http://stackoverflow.com/\"\n\n    chrome.tabs.create({\n      url: newURL\n    });\n  });\n  chrome.webNavigation.onCompleted.addListener(function (details) {//console.log(\"Completed!\");\n    //alert(\"Completed!\");\n  }, {\n    url: [{\n      hostContains: \".paragonrels.com\"\n    }]\n  }); // chrome.tabs.query({ active: true, currentWindow: true }, function(tabs) {\n  //   var timer = new chrome.Interval();\n  //   timer.start();\n  //   var port = chrome.tabs.connect(tabs[0].id);\n  //   port.postMessage({ counter: 1 });\n  //   port.onMessage.addListener(function getResp(response) {\n  //     if (response.counter < 1000) {\n  //       port.postMessage({ counter: response.counter });\n  //     } else {\n  //       timer.stop();\n  //       var usec = Math.round(timer.microseconds() / response.counter);\n  //       console.info(\"usec is::\", usec);\n  //     }\n  //   });\n  // });\n  //receive message from iframes, then transfer the message to Main Page content script\n\n  chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n    console.log(\"onMessage.eventPage got a message\", request); //message from Warning iframe\n\n    if (request.todo == \"warningMessage\") {\n      //console.log(\"I got the warning message!\");\n      //pass the message to defaultpage(Main Home Page)\n      console.info(\"Chrome Tab ID is: \", chromeTabID);\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, {\n          todo: \"ignoreWarning\"\n        });\n      });\n    } //message from Logout iframe\n\n\n    if (request.todo == \"logoutMessage\") {\n      //console.log(\"I got logout message!\");\n      //pass the message to defaultpage(Main Home Page)\n      console.info(\"Chrome Tab ID is: \", chromeTabID);\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, {\n          todo: \"logoutMLS\"\n        });\n      });\n    }\n\n    if (request.todo == \"switchTab\") {\n      console.log(\"I got switch Tab message!\"); //pass the message to defaultpage(Main Home Page)\n\n      console.info(\"Chrome Tab ID is: \", chromeTabID);\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, {\n          todo: \"switchTab\",\n          showResult: request.showResult,\n          saveResult: request.saveResult\n        });\n      });\n      sendResponse(\"switchTab done!!!\");\n    }\n\n    if (request.todo == \"taxSearch\") {\n      //get request to search tax info of Property with PID saved to storage\n      //console.log(\">>>I got tax search command!\");\n      try {\n        chrome.storage.local.get(\"PID\", function (result) {\n          //check database, if assess exist, send it back\n          //console.log(\">>>PID is: \", result.PID);\n          var taxID = result.PID + \"-\" + taxYear;\n          var requester = request.from;\n          db.readAssess(taxID, function (assess) {\n            //console.log(\">>>read from , assess is: \", assess)\n            if (!assess._id) {\n              //other wise , send out tax research command:\n              try {\n                console.info(\"Chrome Tab ID is: \", chromeTabID);\n                chrome.tabs.query({\n                  active: true,\n                  currentWindow: true\n                }, function (tabs) {\n                  console.warn(\"taxSearch get chrome tabs:\", tabs);\n\n                  if (tabs.length > 0) {\n                    chrome.tabs.sendMessage(tabs[0].id, {\n                      todo: \"taxSearchFor\" + requester\n                    });\n                  } else {\n                    if (String(assess.from).indexOf(\"taxSearchFor\" + requester) < 0) {\n                      assess.from = assess.from + \"-taxSearchFor\" + requester;\n                    }\n\n                    assess.from += \"-TaxSearchFailed\";\n                    chrome.storage.local.set(assess);\n                  }\n                });\n              } catch (err) {\n                console.error(\"taxSearch Errors: \", err);\n              }\n            } else {\n              if (String(assess.bcaSearch).indexOf(\"failed\") > -1) {\n                if (String(assess.addedDate).indexOf($today) > -1) {\n                  assess.from = assess.from + \"-TaxSearchFailed-taxSearchFor\" + requester;\n                } else {\n                  //Re-Search the tax Data EveryDay\n                  try {\n                    console.info(\"Chrome Tab ID is: \", chromeTabID);\n                    chrome.tabs.query({\n                      active: true,\n                      currentWindow: true\n                    }, function (tabs) {\n                      console.warn(\"taxSearch get chrome tabs:\", tabs);\n\n                      if (tabs.length > 0) {\n                        chrome.tabs.sendMessage(tabs[0].id, {\n                          todo: \"taxSearchFor\" + requester\n                        });\n                      } else {\n                        if (String(assess.from).indexOf(\"taxSearchFor\" + requester) < 0) {\n                          assess.from = assess.from + \"-taxSearchFor\" + requester;\n                        }\n\n                        assess.from += \"-TaxSearchFailed\";\n                        chrome.storage.local.set(assess);\n                      }\n                    });\n                  } catch (err) {\n                    console.error(\"taxSearch Errors: \", err);\n                  }\n                }\n              } else if (String(assess.from).indexOf(\"taxSearchFor\" + requester) < 0) {\n                assess.from = assess.from + \"-taxSearchFor\" + requester;\n              }\n\n              chrome.storage.local.set(assess);\n            }\n          });\n        });\n        sendResponse(\">>>tax search has been processed in EventPage: \");\n      } catch (err) {\n        sendResponse(\">>>tax search gets errors in EventPage: \");\n      }\n    }\n\n    if (request.todo == \"searchStrataPlanSummary\") {\n      //get request to search tax info of Property with PID saved to storage\n      //console.log(\">>>I got search StrataPlanSummary command!\");\n      chrome.storage.local.get([\"strataPlan\", \"complexNameForListingCount\"], function (result) {\n        //check database, if assess exist, send it back\n        //console.log(\">>>strataPlan is: \", result.strataPlan);\n        var strataPlan = result.strataPlan;\n        var complexName = result.complexNameForListingCount;\n\n        if (!strataPlan || strataPlan == \"PLAN\" || strataPlan == \"PL\") {\n          return;\n        }\n\n        var today = $fx.getToday();\n        db.readStrataPlanSummary(strataPlan + \"-\" + today, function (strataPlanSummaryToday) {\n          //console.log(\">>>read from , strataPlanSummary is: \", strataPlanSummaryToday)\n          if (!strataPlanSummaryToday) {\n            //other wise , send out tax research command:\n            console.info(\"Chrome Tab ID is: \", chromeTabID);\n            chrome.tabs.query({\n              active: true,\n              currentWindow: true\n            }, function (tabs) {\n              chrome.tabs.sendMessage(tabs[0].id, {\n                todo: \"searchComplexListingCount\",\n                showResult: true,\n                saveResult: true,\n                strataPlan: strataPlan,\n                complexName: complexName\n              });\n            });\n          }\n        });\n      });\n      sendResponse(\">>>complex search has been processed in eventpage: \");\n    }\n\n    if (request.todo == \"searchComplexInfo\") {\n      var complexID = request._id;\n      var requestFrom = request.from;\n      delete request.from;\n      var complexInfo = request;\n      db.readComplex(complexInfo, function (cInfo) {\n        //console.log('>>>read the complex info from database:', complexInfo);\n        if (cInfo) {\n          if (cInfo.name.length > 0) {\n            cInfo.from += \"-\" + requestFrom;\n            cInfo.complexName = cInfo.name;\n          } else {\n            cInfo.from += \"-\" + requestFrom;\n            cInfo.complexName = \"::\";\n          }\n\n          chrome.storage.local.set(cInfo, function () {\n            console.log(\"complexInfo is: \", cInfo);\n          });\n        } else {\n          //error for complexInfo\n          console.log(\"Complex Name does not exist in Database\");\n        }\n      });\n    }\n\n    if (request.todo == \"saveComplexInfo\") {\n      var complexID = request._id;\n\n      if (request.complexName.trim().length > 0) {\n        db.writeComplex(request);\n      }\n    }\n\n    if (request.todo == \"searchExposure\") {\n      var requestFrom = request.from;\n      delete request.from;\n      var exposureInfo = request;\n      db.readExposure(exposureInfo, function (cInfo) {\n        console.log(\">>>read the exposure info from database:\", exposureInfo);\n\n        if (cInfo) {\n          if (cInfo.name.length > 0) {\n            cInfo.from += \"-\" + requestFrom;\n            cInfo.exposureName = cInfo.name;\n          } else {\n            cInfo.from += \"-\" + requestFrom;\n            cInfo.exposureName = \"\";\n          }\n\n          chrome.storage.local.set(cInfo, function () {\n            console.log(\"exposureInfo is: \", cInfo);\n          });\n        } else {\n          //error for exposureInfo\n          console.log(\"Exposure Name does not exist in Database\");\n        }\n      });\n    }\n\n    if (request.todo == \"saveExposure\") {\n      console.log(\"write exposure info\");\n      var exposureID = request._id;\n\n      if (request.exposureName.trim().length > 0) {\n        db.writeExposure(request);\n      }\n    } // Listing\n\n\n    if (request.todo == \"searchListing\") {\n      var requestFrom = request.from;\n      delete request.from;\n      var listingInfo = request;\n      db.readListing(listingInfo, function (cInfo) {\n        console.log(\">>>read the listing info from database:\", listingInfo);\n\n        if (cInfo) {\n          if (cInfo.name.length > 0) {\n            cInfo.from += \"-\" + requestFrom;\n            cInfo.listingName = cInfo.name;\n          } else {\n            cInfo.from += \"-\" + requestFrom;\n            cInfo.listingName = \"\";\n          }\n\n          chrome.storage.local.set(cInfo, function () {\n            console.log(\"listingInfo is: \", cInfo);\n          });\n        } else {\n          //error for listingInfo\n          console.log(\"Listing Name does not exist in Database\");\n        }\n      });\n    }\n\n    if (request.todo == \"saveListing\") {\n      console.log(\"write listing info\");\n      var listingID = request._id;\n\n      if (request.listingName.trim().length > 0) {\n        db.writeListing(request);\n      }\n    } // Showing Info\n\n\n    if (request.todo == \"searchShowing\") {\n      var requestFrom = request.from;\n      delete request.from;\n      var showingInfo = request;\n      db.readShowing(showingInfo, function (cInfo) {\n        console.log(\">>>read the showing info from database:\", showingInfo);\n\n        if (cInfo) {\n          if (cInfo.name.length > 0) {\n            cInfo.from += \"-\" + requestFrom;\n            cInfo.name = cInfo.name;\n          } else {\n            cInfo.from += \"-\" + requestFrom;\n            cInfo.name = \"\";\n          }\n\n          chrome.storage.local.set(cInfo, function () {\n            console.log(\"showingInfo is: \", cInfo);\n          });\n        } else {\n          //error for listingInfo\n          console.log(\"Showing Name does not exist in Database\");\n        }\n      });\n    }\n\n    if (request.todo == \"saveShowing\") {\n      console.log(\"write showing info\");\n      var showingID = request._id;\n\n      if (request.name.trim().length > 0) {\n        db.writeShowing(request);\n      }\n    } //\n\n\n    if (request.todo == \"saveTax\") {\n      //console.log(\">>>I got save tax info: \");\n      var assess = request.taxData;\n      assess._id = assess.PID + \"-\" + taxYear;\n      db.writeAssess(assess);\n      sendResponse(assess);\n    }\n\n    if (request.todo == \"saveStrataPlanSummary\") {\n      //console.log(\">>>I got save Complex info: \");\n      var spSummary = request.spSummaryData;\n      db.writeStrataPlanSummary(spSummary);\n      sendResponse(spSummary);\n    }\n\n    if (request.todo == \"updateTopLevelTabMenuItems\") {\n      console.log(\"I got Update Top Level Tab Menu Items Command!\");\n      console.info(\"Chrome Tab ID is: \", chromeTabID);\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, {\n          todo: \"updateTopLevelTabMenuItems\"\n        });\n      });\n      sendResponse(\"Update Top Level Tab Menu Items Command sent out!\");\n    }\n\n    if (request.todo == \"readCurTabID\") {\n      console.log(\"New Command: readCurTabID\");\n      console.info(\"Chrome Tab ID is: \", chromeTabID);\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, {\n          todo: \"readCurTabID\"\n        });\n      });\n      sendResponse(\"readCurTabID Command sent out!\");\n    }\n\n    if (request.todo == \"syncTabToContent\") {\n      console.log(\"New Command: syncTabToContent\");\n      console.info(\"Chrome Tab ID is: \", chromeTabID);\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, {\n          todo: \"syncTabToContent\"\n        });\n      });\n    }\n\n    if (request.todo == \"hideQuickSearch\") {\n      console.log(\"New Command: showQuickSearch\");\n      console.info(\"Chrome Tab ID is: \", chromeTabID);\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, {\n          todo: \"hideQuickSearch\",\n          tabID: request.tabID\n        });\n      });\n    }\n\n    if (request.todo == \"getTabTitle\") {\n      console.log(\"Command: \", request.todo, request.from);\n      var result = null;\n      console.info(\"Chrome Tab ID is: \", chromeTabID);\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, {\n          todo: \"getTabTitle\",\n          tabID: request.tabID\n        }, function (response) {\n          result = response;\n          console.log(\"getTabTitle response:\", response);\n          chrome.storage.local.set({\n            getTabID: result.tabID,\n            getTabTitle: result.tabTitle,\n            todo: \"getTabTitle\" + Math.random().toFixed(8),\n            from: \"EventPage.getTabTitle\"\n          });\n          sendResponse(response);\n        });\n      }); //check(result); //wait for 1 sec, stop eventPage hit the exit point, send out null response\n    }\n\n    if (request.todo == \"addLock\") {\n      //get command from sub content script to add lock to the sub content panel\n      console.log(\"Command: \", request.todo, request.from, request.tabID);\n      var _result = null;\n      console.info(\"Chrome Tab ID is: \", chromeTabID);\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, {\n          todo: \"addLock\",\n          tabID: request.tabID\n        }, function (response) {\n          _result = response;\n          console.log(\"addLock response:\", response); // chrome.storage.local.set(\n          // \t{getTabID:result.tabID,\n          // \tgetTabTitle:result.tabTitle,\n          // \ttodo: 'getTabTitle'+Math.random().toFixed(8),\n          // \tfrom: 'EventPage.getTabTitle'});\n\n          sendResponse(response);\n        });\n      });\n    } // \"https://pidrealty.local/wp-content/themes/pidHomes-PhaseI/db/dbAddSubjectProperty.php\"\n\n\n    if (request.todo == \"saveSubjectInfo\") {\n      var subjectInfo = request;\n      $.ajax({\n        url: \"http://localhost/pidrealty3/wp-content/themes/Realhomes-child/db/dbAddSubjectProperty.php\",\n        method: \"post\",\n        data: subjectInfo,\n        success: function success(res) {\n          console.log(\"res::\", JSON.stringify(res));\n        }\n      });\n    }\n\n    return true;\n  }); //End of Main Function\n})();\n\n//# sourceURL=webpack:///./app/background/eventPage.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/***/ (function(module, exports) {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack:///./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(\"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(\"./node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/webpack/buildin/global.js\"), __webpack_require__(\"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/util/util.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ })

/******/ });